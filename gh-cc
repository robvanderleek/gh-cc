#!/usr/bin/env bash
set -e
script_dir=$(dirname "$0")

get_cc_prefix() {
    cat $script_dir/gitmoji.txt |\
        fzf \
            --with-nth=3.. \
            --pointer='' \
            --no-unicode \
            --no-scrollbar \
            --no-separator \
            --info=hidden \
            --reverse \
            --height 7 |\
        awk '{print $1": "$3}'
}

has_cc_prefix() {
    if [[ $1 == build:* ]] ||\
       [[ $1 == ci:* ]] ||\
       [[ $1 == chore:* ]] ||\
       [[ $1 == docs:* ]] ||\
       [[ $1 == feat:* ]] ||\
       [[ $1 == fix:* ]] ||\
       [[ $1 == perf:* ]] ||\
       [[ $1 == refactor:* ]] ||\
       [[ $1 == style:*  ]] ||\
       [[ $1 == test:* ]]; then
        true
    else
        false
    fi
}

get_openai_commit_message() {
    diff=`git diff | jq -Rsa .`
    curl -s https://api.openai.com/v1/chat/completions \
        -H 'Content-Type: application/json' \
        -H "Authorization: Bearer $OPENAI_API_KEY" \
        -d "{
            \"model\": \"gpt-3.5-turbo\",
            \"messages\": [
                {\"role\": \"system\", \"content\": \"You are a helpful assistant that generates a concise git commit message from the user supplied code diff. Limit the response to 72 characters, do not use emojis.\"},
                {\"role\": \"user\", \"content\": $diff}
      ]
    }" | jq '.choices[0].message.content'
}

args=()
found_flag=false
for var in "$@"
do
    if [ $found_flag = true ]; then
        if [ $(has_cc_prefix $var) ]; then
            args+=("$var")
        else
            prefix=$(get_cc_prefix $var)
            args+=("$prefix $var")
        fi
        found_flag=false
    else
        args+=($var)
        if  [[ $var == -* ]] && [[ $var == *m ]]; then
            found_flag=true 
        fi
    fi
done

if [ -z "$prefix" ]; then
    if [ -z "$OPENAI_API_KEY" ]; then
        read -p "Commit message: " message
        prefix=$(get_cc_prefix)
    else
        read -p "Press enter to generate commit message with OpenAI, CTRL+C to exit"
        message=$(get_openai_commit_message)
        echo $message
        prefix=$(get_cc_prefix)
    fi
    args+=("-m")
    args+=("$prefix $message")
fi
    
git commit "${args[@]}"
